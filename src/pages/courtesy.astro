---
import Offline from "../layouts/Offline.astro";
interface Props {
  site?: string;
  heroText?: string;
  heroDescription?: string;
  endTime?: string;
}
const {
  site = "www.site-name.com",
  heroText = "Coming Back Soon",
  heroDescription = "Redirect your site to this page when in maintenance, under construction or offline for some reason. Setup parameters in this page Astro.Props.",
  endTime = "Jul 28, 2025 00:00:00",
} = Astro.props;
---

<Offline
  title="Courtesy Page"
  description="Site under maintanance. Come back later."
>
  <main>
    <div id="countdown" class="countdown">
      <div class="countdown__header">
        <div id="run">
          <p>
            <small>{site}</small>
          </p>
          <h1>{heroText}</h1>
          <p>{heroDescription}</p>
        </div>
        <div id="arrived" class="hide">
          <p>
            <small>{site}</small>
          </p>
          <h1>We are live! ðŸŽ‰</h1>
          <h3>
            <a href={site} rel="noopener"> {site} </a>
          </h3>
        </div>
      </div>
      <ul>
        <li>
          <span id="days"></span>Days
        </li>
        <li>
          <span id="hours"></span>Hours
        </li>
        <li>
          <span id="minutes"></span>Minutes
        </li>
        <li>
          <span id="seconds"></span>Seconds
        </li>
      </ul>
      <div id="footer" class="countdown__footer">
        <p>Meanwhile you can find {site} here:</p>
        <div class="links">
          <a href="#" rel="noopener" target="_blank" class="social-icon"
            ><i class="fa fa-envelope"></i></a
          >
          <a href="#" rel="noopener" target="_blank" class="social-icon"
            ><i class="fa fa-github"></i></a
          >
          <a href="#" rel="noopener" target="_blank" class="social-icon"
            ><i class="fa fa-instagram"></i></a
          >
        </div>
      </div>
    </div>
  </main>
</Offline>

<style>
  @import url(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.css);
  html {
    height: 100%;
    overflow: hidden;
  }

  body {
    background: hsla(210, 6%, 46%, 1);
    background: linear-gradient(
      90deg,
      hsla(201, 55%, 68%, 1) 0%,
      hsla(210, 8%, 5%, 1) 100%
    );
    background: -moz-linear-gradient(
      90deg,
      hsla(201, 55%, 68%, 1) 0%,
      hsla(210, 10%, 19%, 1) 100%
    );
    background: -webkit-linear-gradient(
      90deg,
      hsla(201, 55%, 68%, 1) 0%,
      hsla(220, 6%, 10%, 1) 100%
    );
    color: #fff;
    font-family: sans-serif;
    text-align: center;
    min-height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  h1 {
    font-size: 2rem;
    margin: 0;
  }

  p {
    font-family: monospace;
    font-size: 1.124em;
  }

  #countdown {
    max-width: 600px;
  }

  #countdown ul {
    margin: 5% 0 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 2%;
  }

  #countdown ul li {
    flex: 25%;
    padding: 5%;
    margin: 0 0 5%;
    list-style: none;
    background: #333;
    border-radius: 5px;
  }

  #countdown ul li span {
    display: block;
    font-size: 3rem;
  }

  .countdown__header {
    text-align: left;
  }

  .countdown__footer {
    flex: 100%;
    padding: 1rem;
    display: flex;
    flex-flow: column wrap;
    justify-content: start;
    gap: 1rem;
    text-align: left;
  }

  .links {
    display: flex;
    justify-content: center;
    gap: 1rem;
  }

  a {
    padding: 0.5rem 1rem;
    color: var(--color-foreground);
    background-color: var(--color-background);
    text-decoration: none;
    font-size: var(--fs-small);
  }

  .social-icon {
    font-size: 1.325rem;
  }

  .hide {
    display: none;
  }

  @media (min-width: 48em) {
    h1 {
      font-size: 3.125rem;
    }

    #countdown ul {
      flex-wrap: nowrap !important;
    }
  }
</style>

<script is:inline define:vars={{ endTime }}>
  (() => {
    const sec = 1000,
      min = sec * 60,
      hour = min * 60,
      day = hour * 24;
    const end = new Date(endTime).getTime();
    const int = setInterval(() => {
      const current = new Date().getTime();
      const remaining = end - current;
      document.getElementById("days").innerText = Math.floor(remaining / day);
      document.getElementById("hours").innerText = Math.floor(
        (remaining % day) / hour
      );
      document.getElementById("minutes").innerText = Math.floor(
        (remaining % hour) / min
      );
      document.getElementById("seconds").innerText = Math.floor(
        (remaining % min) / sec
      );
      if (remaining < 0) {
        document.querySelector("#run").classList.add("hide");
        document.querySelector("#footer").classList.add("hide");
        document.querySelector("#arrived").classList.remove("hide");
        const digit = document.querySelectorAll("span");
        digit.forEach((digit) => {
          digit.innerText = "0";
        });
        clearInterval(int);
      }
    }, 1000);
  })();
</script>
